/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package conversordecelsiusyfahrenheit;

import javax.swing.JOptionPane;
import java.text.DecimalFormat;

/**
 *
 * @author Elian
 */
public class Convertidor extends javax.swing.JFrame {

    private final DecimalFormat formatoDecimal = new DecimalFormat("#0.00");
    
    /**
     * Creates new form Convertidor
     */
    public Convertidor() {
        initComponents();
    }
    
     private void mostrarError(String mensaje) {
        JOptionPane.showMessageDialog(
            this,
            mensaje,
            "Error de Entrada",
            JOptionPane.ERROR_MESSAGE
        );
    }
     
     private void limpiarCampos() {
        txtTemperatura.setText("");
        lblResultado.setText("Ingrese una temperatura y seleccione la conversión");
        txtTemperatura.requestFocus();
    }

     private void configurarVentana() {
        setTitle("Conversor de Temperaturas");
        setLocationRelativeTo(null); // Centrar ventana
        setResizable(false);
        
        // Configurar texto inicial del resultado
        lblResultado.setText("Ingrese una temperatura y seleccione la conversión");
    }
     
     private void convertirAFahrenheit() {
        try {
            // Obtener el valor del campo de texto
            String textoTemperatura = txtTemperatura.getText().trim();
            
            // Validar que no esté vacío
            if (textoTemperatura.isEmpty()) {
                mostrarError("Por favor, ingrese una temperatura válida.");
                return;
            }
            
            // Convertir texto a número
            double celsius = Double.parseDouble(textoTemperatura);
            
            // Aplicar la fórmula de conversión
            double fahrenheit = (9.0 / 5.0 * celsius) + 32;
            
            // Mostrar el resultado
            String resultado = formatoDecimal.format(celsius) + "°C = " + 
                             formatoDecimal.format(fahrenheit) + "°F";
            lblResultado.setText(resultado);
            
        } catch (NumberFormatException e) {
            mostrarError("Error: Ingrese un número válido.");
            limpiarCampos();
        }
    }
     
     private void convertirACelsius() {
        try {
            // Obtener el valor del campo de texto
            String textoTemperatura = txtTemperatura.getText().trim();
            
            // Validar que no esté vacío
            if (textoTemperatura.isEmpty()) {
                mostrarError("Por favor, ingrese una temperatura válida.");
                return;
            }
            
            // Convertir texto a número
            double fahrenheit = Double.parseDouble(textoTemperatura);
            
            // Aplicar la fórmula de conversión
            double celsius = (5.0 / 9.0) * (fahrenheit - 32);
            
            // Mostrar el resultado
            String resultado = formatoDecimal.format(fahrenheit) + "°F = " + 
                             formatoDecimal.format(celsius) + "°C";
            lblResultado.setText(resultado);
            
        } catch (NumberFormatException e) {
            mostrarError("Error: Ingrese un número válido.");
            limpiarCampos();
        }
    }
     
      private void validarEntrada() {
        String texto = txtTemperatura.getText();
        if (!texto.isEmpty()) {
            try {
                Double.parseDouble(texto);
                // Si es válido, habilitar botones
                btnFahrenheit.setEnabled(true);
                btnCelsius.setEnabled(true);
            } catch (NumberFormatException e) {
                // Si no es válido, mostrar mensaje en el label
                lblResultado.setText("Ingrese un número válido");
            }
        } else {
            lblResultado.setText("Ingrese una temperatura y seleccione la conversión");
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtTemperatura = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnFahrenheit = new javax.swing.JButton();
        btnCelsius = new javax.swing.JButton();
        lblResultado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Ingrese la temperatura \nque de sea comvertir ");
        jLabel1.setToolTipText("");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtTemperatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTemperaturaActionPerformed(evt);
            }
        });

        jLabel2.setText("Resultado:");

        btnFahrenheit.setText("Fahrenheit");
        btnFahrenheit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFahrenheitActionPerformed(evt);
            }
        });

        btnCelsius.setText("Celsius");
        btnCelsius.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCelsiusActionPerformed(evt);
            }
        });

        lblResultado.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(btnFahrenheit)))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblResultado)
                            .addComponent(btnCelsius)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFahrenheit)
                    .addComponent(btnCelsius))
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblResultado))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFahrenheitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFahrenheitActionPerformed
        // TODO add your handling code here:
         convertirAFahrenheit();
    }//GEN-LAST:event_btnFahrenheitActionPerformed

    private void btnCelsiusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCelsiusActionPerformed
        // TODO add your handling code here:
         convertirACelsius();
    }//GEN-LAST:event_btnCelsiusActionPerformed

    private void txtTemperaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTemperaturaActionPerformed
        // TODO add your handling code here:
         validarEntrada();
    }//GEN-LAST:event_txtTemperaturaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Convertidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Convertidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Convertidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Convertidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Convertidor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCelsius;
    private javax.swing.JButton btnFahrenheit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblResultado;
    private javax.swing.JTextField txtTemperatura;
    // End of variables declaration//GEN-END:variables
}
